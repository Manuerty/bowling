from src.game import Game
import pytest


@pytest.mark.parametrize(
    "pins, final_score",
    [
        ("xxxxxxxxxxxx", 300),
        ("8/549-XX5/53639/9/X", 149),
        ("9-3561368153258-7181", 82),
        ("9-9-9-9-9-9-9-9-9-9-", 90),
        ("X5/X5/XX5/--5/X5/", 175),
        ("9-9-9-9-9-9-9-9-9-XXX", 111),
        ("XXX9-9-9-9-9-9-9-", 141),
        ("5/5/5/5/5/5/5/5/5/5/5", 150),
        ("9-3/613/815/-/8-7/8/8", 131),
    ],
)
def test_calculate_scores(pins, final_score):
    assert Game(pins).get_score() == final_score


@pytest.mark.parametrize(
    "pins, numeric_pins",
    [
        ("xxxxxxxxxxxx", [10] * 12),
        (
            "8/549-XX5/53639/9/X",
            [8, 2, 5, 4, 9, 0, 10, 10, 5, 5, 5, 3, 6, 3, 9, 1, 9, 1, 10],
        ),
        (
            "9-3561368153258-7181",
            [9, 0, 3, 5, 6, 1, 3, 6, 8, 1, 5, 3, 2, 5, 8, 0, 7, 1, 8, 1],
        ),
        (
            "9-9-9-9-9-9-9-9-9-9-",
            [9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0],
        ),
        ("X5/X5/XX5/--5/X5/", [10, 5, 5, 10, 5, 5, 10, 10, 5, 5, 0, 0, 5, 5, 10, 5, 5]),
        (
            "9-9-9-9-9-9-9-9-9-XXX",
            [9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 10, 10, 10],
        ),
        ("XXX9-9-9-9-9-9-9-", [10, 10, 10, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0]),
        (
            "5/5/5/5/5/5/5/5/5/5/5",
            [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
        ),
        (
            "9-3/613/815/-/8-7/8/8",
            [9, 0, 3, 7, 6, 1, 3, 7, 8, 1, 5, 5, 0, 10, 8, 0, 7, 3, 8, 2, 8],
        ),
    ],
)
def test_set_num_pins(pins, numeric_pins):
    assert Game(pins).calc_pin_values() == numeric_pins
